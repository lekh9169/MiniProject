{"id":"node_modules/tsparticles/dist/Core/Retina.js","dependencies":[{"name":"E:\\Ment-master\\package.json","includedInParent":true,"mtime":1593073115667},{"name":"E:\\Ment-master\\.babelrc","includedInParent":true,"mtime":1592712076000},{"name":"E:\\Ment-master\\node_modules\\tsparticles\\package.json","includedInParent":true,"mtime":1593073113793},{"name":"../Utils","loc":{"line":4,"column":24},"parent":"E:\\Ment-master\\node_modules\\tsparticles\\dist\\Core\\Retina.js","resolved":"E:\\Ment-master\\node_modules\\tsparticles\\dist\\Utils\\index.js"}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Retina = void 0;\nconst Utils_1 = require(\"../Utils\");\nclass Retina {\n    constructor(container) {\n        this.container = container;\n    }\n    init() {\n        const container = this.container;\n        const options = container.options;\n        if (options.detectRetina) {\n            this.pixelRatio = Utils_1.Utils.isSsr() ? 1 : window.devicePixelRatio;\n        }\n        else {\n            this.pixelRatio = 1;\n        }\n        const ratio = this.pixelRatio;\n        if (container.canvas.element) {\n            const element = container.canvas.element;\n            container.canvas.size.width = element.offsetWidth * ratio;\n            container.canvas.size.height = element.offsetHeight * ratio;\n        }\n        const particles = options.particles;\n        this.linksDistance = particles.links.distance * ratio;\n        this.linksWidth = particles.links.width * ratio;\n        this.moveSpeed = particles.move.speed * ratio;\n        this.sizeValue = particles.size.value * ratio;\n        this.sizeAnimationSpeed = particles.size.animation.speed * ratio;\n        const modes = options.interactivity.modes;\n        this.connectModeDistance = modes.connect.distance * ratio;\n        this.connectModeRadius = modes.connect.radius * ratio;\n        this.grabModeDistance = modes.grab.distance * ratio;\n        this.repulseModeDistance = modes.repulse.distance * ratio;\n        this.slowModeRadius = modes.slow.radius * ratio;\n        this.bubbleModeDistance = modes.bubble.distance * ratio;\n        if (modes.bubble.size) {\n            this.bubbleModeSize = modes.bubble.size * ratio;\n        }\n    }\n    initParticle(particle) {\n        const particlesOptions = particle.particlesOptions;\n        const ratio = this.pixelRatio;\n        particle.linksDistance = particlesOptions.links.distance * ratio;\n        particle.linksWidth = particlesOptions.links.width * ratio;\n        particle.moveSpeed = particlesOptions.move.speed * ratio;\n        particle.sizeValue = particlesOptions.size.value * ratio;\n        if (typeof particlesOptions.size.random !== \"boolean\") {\n            particle.randomMinimumSize = particlesOptions.size.random.minimumValue * ratio;\n        }\n        particle.sizeAnimationSpeed = particlesOptions.size.animation.speed * ratio;\n    }\n}\nexports.Retina = Retina;\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/tsparticles/dist/Core/Retina.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Retina.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Retina.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Retina.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Retina.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Retina.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Retina.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Retina.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Retina.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Retina.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Retina.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Retina.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Retina.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Retina.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Retina.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Retina.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Retina.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Retina.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Retina.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Retina.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Retina.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Retina.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Retina.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Retina.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Retina.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Retina.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Retina.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Retina.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Retina.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Retina.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Retina.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Retina.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Retina.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Retina.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Retina.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Retina.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Retina.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Retina.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Retina.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Retina.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Retina.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Retina.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Retina.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Retina.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Retina.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Retina.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Retina.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Retina.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Retina.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Retina.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Retina.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Retina.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Retina.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Retina.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Retina.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}}],"sources":{"node_modules/tsparticles/dist/Core/Retina.js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Retina = void 0;\nconst Utils_1 = require(\"../Utils\");\nclass Retina {\n    constructor(container) {\n        this.container = container;\n    }\n    init() {\n        const container = this.container;\n        const options = container.options;\n        if (options.detectRetina) {\n            this.pixelRatio = Utils_1.Utils.isSsr() ? 1 : window.devicePixelRatio;\n        }\n        else {\n            this.pixelRatio = 1;\n        }\n        const ratio = this.pixelRatio;\n        if (container.canvas.element) {\n            const element = container.canvas.element;\n            container.canvas.size.width = element.offsetWidth * ratio;\n            container.canvas.size.height = element.offsetHeight * ratio;\n        }\n        const particles = options.particles;\n        this.linksDistance = particles.links.distance * ratio;\n        this.linksWidth = particles.links.width * ratio;\n        this.moveSpeed = particles.move.speed * ratio;\n        this.sizeValue = particles.size.value * ratio;\n        this.sizeAnimationSpeed = particles.size.animation.speed * ratio;\n        const modes = options.interactivity.modes;\n        this.connectModeDistance = modes.connect.distance * ratio;\n        this.connectModeRadius = modes.connect.radius * ratio;\n        this.grabModeDistance = modes.grab.distance * ratio;\n        this.repulseModeDistance = modes.repulse.distance * ratio;\n        this.slowModeRadius = modes.slow.radius * ratio;\n        this.bubbleModeDistance = modes.bubble.distance * ratio;\n        if (modes.bubble.size) {\n            this.bubbleModeSize = modes.bubble.size * ratio;\n        }\n    }\n    initParticle(particle) {\n        const particlesOptions = particle.particlesOptions;\n        const ratio = this.pixelRatio;\n        particle.linksDistance = particlesOptions.links.distance * ratio;\n        particle.linksWidth = particlesOptions.links.width * ratio;\n        particle.moveSpeed = particlesOptions.move.speed * ratio;\n        particle.sizeValue = particlesOptions.size.value * ratio;\n        if (typeof particlesOptions.size.random !== \"boolean\") {\n            particle.randomMinimumSize = particlesOptions.size.random.minimumValue * ratio;\n        }\n        particle.sizeAnimationSpeed = particlesOptions.size.animation.speed * ratio;\n    }\n}\nexports.Retina = Retina;\n"},"lineCount":55}},"error":null,"hash":"542197b9fd4488536f30711688ee1614","cacheData":{"env":{}}}