{"id":"node_modules/tsparticles/dist/Core/Particle/Updater.js","dependencies":[{"name":"E:\\Ment-master\\package.json","includedInParent":true,"mtime":1593073115667},{"name":"E:\\Ment-master\\.babelrc","includedInParent":true,"mtime":1592712076000},{"name":"E:\\Ment-master\\node_modules\\tsparticles\\package.json","includedInParent":true,"mtime":1593073113793},{"name":"../../Utils","loc":{"line":4,"column":24},"parent":"E:\\Ment-master\\node_modules\\tsparticles\\dist\\Core\\Particle\\Updater.js","resolved":"E:\\Ment-master\\node_modules\\tsparticles\\dist\\Utils\\index.js"},{"name":"./Mover","loc":{"line":5,"column":24},"parent":"E:\\Ment-master\\node_modules\\tsparticles\\dist\\Core\\Particle\\Updater.js","resolved":"E:\\Ment-master\\node_modules\\tsparticles\\dist\\Core\\Particle\\Mover.js"},{"name":"../../Enums","loc":{"line":6,"column":24},"parent":"E:\\Ment-master\\node_modules\\tsparticles\\dist\\Core\\Particle\\Updater.js","resolved":"E:\\Ment-master\\node_modules\\tsparticles\\dist\\Enums\\index.js"}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Updater = void 0;\nconst Utils_1 = require(\"../../Utils\");\nconst Mover_1 = require(\"./Mover\");\nconst Enums_1 = require(\"../../Enums\");\nclass Updater {\n    constructor(container, particle) {\n        this.container = container;\n        this.particle = particle;\n        this.mover = new Mover_1.Mover(container, particle);\n    }\n    static checkBounds(coordinate, radius, size, velocity, outside) {\n        if ((coordinate + radius > size && velocity > 0) || (coordinate - radius < 0 && velocity < 0)) {\n            outside();\n        }\n    }\n    update(delta) {\n        this.mover.move(delta);\n        this.updateOpacity(delta);\n        this.updateSize(delta);\n        this.updateAngle(delta);\n        this.updateColor(delta);\n        this.fixOutOfCanvasPosition();\n        this.updateOutMode(delta);\n    }\n    updateOpacity(delta) {\n        const options = this.container.options;\n        const particle = this.particle;\n        const deltaFactor = options.fpsLimit > 0 ? (60 * delta) / 1000 : 3.6;\n        if (particle.particlesOptions.opacity.animation.enable) {\n            switch (particle.opacity.status) {\n                case Enums_1.OpacityAnimationStatus.increasing:\n                    if (particle.opacity.value >= particle.particlesOptions.opacity.value) {\n                        particle.opacity.status = Enums_1.OpacityAnimationStatus.decreasing;\n                    }\n                    else {\n                        particle.opacity.value += (particle.opacity.velocity || 0) * deltaFactor;\n                    }\n                    break;\n                case Enums_1.OpacityAnimationStatus.decreasing:\n                    if (particle.opacity.value <= particle.particlesOptions.opacity.animation.minimumValue) {\n                        particle.opacity.status = Enums_1.OpacityAnimationStatus.increasing;\n                    }\n                    else {\n                        particle.opacity.value -= (particle.opacity.velocity || 0) * deltaFactor;\n                    }\n                    break;\n            }\n            if (particle.opacity.value < 0) {\n                particle.opacity.value = 0;\n            }\n        }\n    }\n    updateSize(delta) {\n        var _a;\n        const container = this.container;\n        const options = container.options;\n        const particle = this.particle;\n        const deltaFactor = options.fpsLimit > 0 ? (60 * delta) / 1000 : 3.6;\n        const sizeOpt = particle.particlesOptions.size;\n        const sizeAnim = sizeOpt.animation;\n        if (sizeAnim.enable) {\n            switch (particle.size.status) {\n                case Enums_1.SizeAnimationStatus.increasing:\n                    if (particle.size.value >= ((_a = particle.sizeValue) !== null && _a !== void 0 ? _a : container.retina.sizeValue)) {\n                        particle.size.status = Enums_1.SizeAnimationStatus.decreasing;\n                    }\n                    else {\n                        particle.size.value += (particle.size.velocity || 0) * deltaFactor;\n                    }\n                    break;\n                case Enums_1.SizeAnimationStatus.decreasing:\n                    if (particle.size.value <= sizeAnim.minimumValue) {\n                        particle.size.status = Enums_1.SizeAnimationStatus.increasing;\n                    }\n                    else {\n                        particle.size.value -= (particle.size.velocity || 0) * deltaFactor;\n                    }\n            }\n            switch (sizeAnim.destroy) {\n                case Enums_1.DestroyType.max:\n                    if (particle.size.value >= sizeOpt.value * container.retina.pixelRatio) {\n                        particle.destroy();\n                    }\n                    break;\n                case Enums_1.DestroyType.min:\n                    if (particle.size.value <= sizeAnim.minimumValue * container.retina.pixelRatio) {\n                        particle.destroy();\n                    }\n                    break;\n            }\n            if (particle.size.value < 0 && !particle.destroyed) {\n                particle.size.value = 0;\n            }\n        }\n    }\n    updateAngle(delta) {\n        const options = this.container.options;\n        const particle = this.particle;\n        const deltaFactor = options.fpsLimit > 0 ? (60 * delta) / 1000 : 3.6;\n        if (particle.particlesOptions.rotate.animation.enable) {\n            switch (particle.rotateDirection) {\n                case Enums_1.RotateDirection.clockwise:\n                    particle.angle += ((particle.particlesOptions.rotate.animation.speed * Math.PI) / 18) * deltaFactor;\n                    if (particle.angle > 360) {\n                        particle.angle -= 360;\n                    }\n                    break;\n                case Enums_1.RotateDirection.counterClockwise:\n                default:\n                    particle.angle -= ((particle.particlesOptions.rotate.animation.speed * Math.PI) / 18) * deltaFactor;\n                    if (particle.angle < 0) {\n                        particle.angle += 360;\n                    }\n                    break;\n            }\n        }\n    }\n    updateColor(delta) {\n        const options = this.container.options;\n        const particle = this.particle;\n        if (particle.color === undefined) {\n            return;\n        }\n        const deltaFactor = options.fpsLimit > 0 ? (60 * delta) / 1000 : 3.6;\n        if (particle.particlesOptions.color.animation.enable) {\n            particle.color.h += (particle.colorVelocity || 0) * deltaFactor;\n            if (particle.color.h > 360) {\n                particle.color.h -= 360;\n            }\n        }\n    }\n    fixOutOfCanvasPosition() {\n        const container = this.container;\n        const particle = this.particle;\n        const outMode = particle.particlesOptions.move.outMode;\n        const wrap = particle.particlesOptions.move.warp;\n        const canvasSize = container.canvas.size;\n        let newPos;\n        if (outMode === Enums_1.OutMode.bounce) {\n            newPos = {\n                bottom: canvasSize.height,\n                left: particle.size.value,\n                right: canvasSize.width,\n                top: particle.size.value,\n            };\n        }\n        else if (outMode === Enums_1.OutMode.bounceHorizontal) {\n            newPos = {\n                bottom: canvasSize.height + particle.size.value - particle.offset.y,\n                left: particle.size.value,\n                right: canvasSize.width,\n                top: -particle.size.value - particle.offset.y,\n            };\n        }\n        else if (outMode === Enums_1.OutMode.bounceVertical) {\n            newPos = {\n                bottom: canvasSize.height,\n                left: -particle.size.value - particle.offset.x,\n                right: canvasSize.width + particle.size.value + particle.offset.x,\n                top: particle.size.value,\n            };\n        }\n        else {\n            newPos = {\n                bottom: canvasSize.height + particle.size.value - particle.offset.y,\n                left: -particle.size.value - particle.offset.x,\n                right: canvasSize.width + particle.size.value + particle.offset.x,\n                top: -particle.size.value - particle.offset.y,\n            };\n        }\n        if (outMode === Enums_1.OutMode.destroy) {\n            const sizeValue = particle.size.value;\n            if (!Utils_1.Utils.isPointInside(particle.position, container.canvas.size, sizeValue)) {\n                container.particles.remove(particle);\n            }\n        }\n        else {\n            const sizeValue = particle.size.value;\n            const nextBounds = Utils_1.Utils.calculateBounds(particle.position, sizeValue);\n            if (nextBounds.left > canvasSize.width - particle.offset.x) {\n                particle.position.x = newPos.left;\n                if (!wrap) {\n                    particle.position.y = Math.random() * canvasSize.height;\n                }\n            }\n            else if (nextBounds.right < -particle.offset.x) {\n                particle.position.x = newPos.right;\n                if (!wrap) {\n                    particle.position.y = Math.random() * canvasSize.height;\n                }\n            }\n            if (nextBounds.top > canvasSize.height - particle.offset.y) {\n                if (!wrap) {\n                    particle.position.x = Math.random() * canvasSize.width;\n                }\n                particle.position.y = newPos.top;\n            }\n            else if (nextBounds.bottom < -particle.offset.y) {\n                if (!wrap) {\n                    particle.position.x = Math.random() * canvasSize.width;\n                }\n                particle.position.y = newPos.bottom;\n            }\n        }\n    }\n    updateOutMode(delta) {\n        switch (this.particle.particlesOptions.move.outMode) {\n            case Enums_1.OutMode.bounce:\n            case Enums_1.OutMode.bounceVertical:\n            case Enums_1.OutMode.bounceHorizontal:\n                this.updateBounce(delta);\n                break;\n        }\n    }\n    updateBounce(delta) {\n        const container = this.container;\n        const particle = this.particle;\n        let handled = false;\n        for (const [, plugin] of container.plugins) {\n            if (plugin.particleBounce !== undefined) {\n                handled = plugin.particleBounce(particle, delta);\n            }\n            if (handled) {\n                break;\n            }\n        }\n        if (!handled) {\n            const outMode = particle.particlesOptions.move.outMode;\n            const pos = particle.getPosition();\n            if (outMode === Enums_1.OutMode.bounce || outMode === Enums_1.OutMode.bounceHorizontal) {\n                const size = particle.size.value;\n                const velocity = particle.velocity.horizontal;\n                Updater.checkBounds(pos.x, size, container.canvas.size.width, velocity, () => {\n                    particle.velocity.horizontal *= -1;\n                });\n            }\n            if (outMode === Enums_1.OutMode.bounce || outMode === Enums_1.OutMode.bounceVertical) {\n                const size = particle.size.value;\n                const velocity = particle.velocity.vertical;\n                Updater.checkBounds(pos.y, size, container.canvas.size.height, velocity, () => {\n                    particle.velocity.vertical *= -1;\n                });\n            }\n        }\n    }\n}\nexports.Updater = Updater;\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Updater.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}}],"sources":{"node_modules/tsparticles/dist/Core/Particle/Updater.js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Updater = void 0;\nconst Utils_1 = require(\"../../Utils\");\nconst Mover_1 = require(\"./Mover\");\nconst Enums_1 = require(\"../../Enums\");\nclass Updater {\n    constructor(container, particle) {\n        this.container = container;\n        this.particle = particle;\n        this.mover = new Mover_1.Mover(container, particle);\n    }\n    static checkBounds(coordinate, radius, size, velocity, outside) {\n        if ((coordinate + radius > size && velocity > 0) || (coordinate - radius < 0 && velocity < 0)) {\n            outside();\n        }\n    }\n    update(delta) {\n        this.mover.move(delta);\n        this.updateOpacity(delta);\n        this.updateSize(delta);\n        this.updateAngle(delta);\n        this.updateColor(delta);\n        this.fixOutOfCanvasPosition();\n        this.updateOutMode(delta);\n    }\n    updateOpacity(delta) {\n        const options = this.container.options;\n        const particle = this.particle;\n        const deltaFactor = options.fpsLimit > 0 ? (60 * delta) / 1000 : 3.6;\n        if (particle.particlesOptions.opacity.animation.enable) {\n            switch (particle.opacity.status) {\n                case Enums_1.OpacityAnimationStatus.increasing:\n                    if (particle.opacity.value >= particle.particlesOptions.opacity.value) {\n                        particle.opacity.status = Enums_1.OpacityAnimationStatus.decreasing;\n                    }\n                    else {\n                        particle.opacity.value += (particle.opacity.velocity || 0) * deltaFactor;\n                    }\n                    break;\n                case Enums_1.OpacityAnimationStatus.decreasing:\n                    if (particle.opacity.value <= particle.particlesOptions.opacity.animation.minimumValue) {\n                        particle.opacity.status = Enums_1.OpacityAnimationStatus.increasing;\n                    }\n                    else {\n                        particle.opacity.value -= (particle.opacity.velocity || 0) * deltaFactor;\n                    }\n                    break;\n            }\n            if (particle.opacity.value < 0) {\n                particle.opacity.value = 0;\n            }\n        }\n    }\n    updateSize(delta) {\n        var _a;\n        const container = this.container;\n        const options = container.options;\n        const particle = this.particle;\n        const deltaFactor = options.fpsLimit > 0 ? (60 * delta) / 1000 : 3.6;\n        const sizeOpt = particle.particlesOptions.size;\n        const sizeAnim = sizeOpt.animation;\n        if (sizeAnim.enable) {\n            switch (particle.size.status) {\n                case Enums_1.SizeAnimationStatus.increasing:\n                    if (particle.size.value >= ((_a = particle.sizeValue) !== null && _a !== void 0 ? _a : container.retina.sizeValue)) {\n                        particle.size.status = Enums_1.SizeAnimationStatus.decreasing;\n                    }\n                    else {\n                        particle.size.value += (particle.size.velocity || 0) * deltaFactor;\n                    }\n                    break;\n                case Enums_1.SizeAnimationStatus.decreasing:\n                    if (particle.size.value <= sizeAnim.minimumValue) {\n                        particle.size.status = Enums_1.SizeAnimationStatus.increasing;\n                    }\n                    else {\n                        particle.size.value -= (particle.size.velocity || 0) * deltaFactor;\n                    }\n            }\n            switch (sizeAnim.destroy) {\n                case Enums_1.DestroyType.max:\n                    if (particle.size.value >= sizeOpt.value * container.retina.pixelRatio) {\n                        particle.destroy();\n                    }\n                    break;\n                case Enums_1.DestroyType.min:\n                    if (particle.size.value <= sizeAnim.minimumValue * container.retina.pixelRatio) {\n                        particle.destroy();\n                    }\n                    break;\n            }\n            if (particle.size.value < 0 && !particle.destroyed) {\n                particle.size.value = 0;\n            }\n        }\n    }\n    updateAngle(delta) {\n        const options = this.container.options;\n        const particle = this.particle;\n        const deltaFactor = options.fpsLimit > 0 ? (60 * delta) / 1000 : 3.6;\n        if (particle.particlesOptions.rotate.animation.enable) {\n            switch (particle.rotateDirection) {\n                case Enums_1.RotateDirection.clockwise:\n                    particle.angle += ((particle.particlesOptions.rotate.animation.speed * Math.PI) / 18) * deltaFactor;\n                    if (particle.angle > 360) {\n                        particle.angle -= 360;\n                    }\n                    break;\n                case Enums_1.RotateDirection.counterClockwise:\n                default:\n                    particle.angle -= ((particle.particlesOptions.rotate.animation.speed * Math.PI) / 18) * deltaFactor;\n                    if (particle.angle < 0) {\n                        particle.angle += 360;\n                    }\n                    break;\n            }\n        }\n    }\n    updateColor(delta) {\n        const options = this.container.options;\n        const particle = this.particle;\n        if (particle.color === undefined) {\n            return;\n        }\n        const deltaFactor = options.fpsLimit > 0 ? (60 * delta) / 1000 : 3.6;\n        if (particle.particlesOptions.color.animation.enable) {\n            particle.color.h += (particle.colorVelocity || 0) * deltaFactor;\n            if (particle.color.h > 360) {\n                particle.color.h -= 360;\n            }\n        }\n    }\n    fixOutOfCanvasPosition() {\n        const container = this.container;\n        const particle = this.particle;\n        const outMode = particle.particlesOptions.move.outMode;\n        const wrap = particle.particlesOptions.move.warp;\n        const canvasSize = container.canvas.size;\n        let newPos;\n        if (outMode === Enums_1.OutMode.bounce) {\n            newPos = {\n                bottom: canvasSize.height,\n                left: particle.size.value,\n                right: canvasSize.width,\n                top: particle.size.value,\n            };\n        }\n        else if (outMode === Enums_1.OutMode.bounceHorizontal) {\n            newPos = {\n                bottom: canvasSize.height + particle.size.value - particle.offset.y,\n                left: particle.size.value,\n                right: canvasSize.width,\n                top: -particle.size.value - particle.offset.y,\n            };\n        }\n        else if (outMode === Enums_1.OutMode.bounceVertical) {\n            newPos = {\n                bottom: canvasSize.height,\n                left: -particle.size.value - particle.offset.x,\n                right: canvasSize.width + particle.size.value + particle.offset.x,\n                top: particle.size.value,\n            };\n        }\n        else {\n            newPos = {\n                bottom: canvasSize.height + particle.size.value - particle.offset.y,\n                left: -particle.size.value - particle.offset.x,\n                right: canvasSize.width + particle.size.value + particle.offset.x,\n                top: -particle.size.value - particle.offset.y,\n            };\n        }\n        if (outMode === Enums_1.OutMode.destroy) {\n            const sizeValue = particle.size.value;\n            if (!Utils_1.Utils.isPointInside(particle.position, container.canvas.size, sizeValue)) {\n                container.particles.remove(particle);\n            }\n        }\n        else {\n            const sizeValue = particle.size.value;\n            const nextBounds = Utils_1.Utils.calculateBounds(particle.position, sizeValue);\n            if (nextBounds.left > canvasSize.width - particle.offset.x) {\n                particle.position.x = newPos.left;\n                if (!wrap) {\n                    particle.position.y = Math.random() * canvasSize.height;\n                }\n            }\n            else if (nextBounds.right < -particle.offset.x) {\n                particle.position.x = newPos.right;\n                if (!wrap) {\n                    particle.position.y = Math.random() * canvasSize.height;\n                }\n            }\n            if (nextBounds.top > canvasSize.height - particle.offset.y) {\n                if (!wrap) {\n                    particle.position.x = Math.random() * canvasSize.width;\n                }\n                particle.position.y = newPos.top;\n            }\n            else if (nextBounds.bottom < -particle.offset.y) {\n                if (!wrap) {\n                    particle.position.x = Math.random() * canvasSize.width;\n                }\n                particle.position.y = newPos.bottom;\n            }\n        }\n    }\n    updateOutMode(delta) {\n        switch (this.particle.particlesOptions.move.outMode) {\n            case Enums_1.OutMode.bounce:\n            case Enums_1.OutMode.bounceVertical:\n            case Enums_1.OutMode.bounceHorizontal:\n                this.updateBounce(delta);\n                break;\n        }\n    }\n    updateBounce(delta) {\n        const container = this.container;\n        const particle = this.particle;\n        let handled = false;\n        for (const [, plugin] of container.plugins) {\n            if (plugin.particleBounce !== undefined) {\n                handled = plugin.particleBounce(particle, delta);\n            }\n            if (handled) {\n                break;\n            }\n        }\n        if (!handled) {\n            const outMode = particle.particlesOptions.move.outMode;\n            const pos = particle.getPosition();\n            if (outMode === Enums_1.OutMode.bounce || outMode === Enums_1.OutMode.bounceHorizontal) {\n                const size = particle.size.value;\n                const velocity = particle.velocity.horizontal;\n                Updater.checkBounds(pos.x, size, container.canvas.size.width, velocity, () => {\n                    particle.velocity.horizontal *= -1;\n                });\n            }\n            if (outMode === Enums_1.OutMode.bounce || outMode === Enums_1.OutMode.bounceVertical) {\n                const size = particle.size.value;\n                const velocity = particle.velocity.vertical;\n                Updater.checkBounds(pos.y, size, container.canvas.size.height, velocity, () => {\n                    particle.velocity.vertical *= -1;\n                });\n            }\n        }\n    }\n}\nexports.Updater = Updater;\n"},"lineCount":250}},"error":null,"hash":"0af982143d188b82278fc4afc3691c30","cacheData":{"env":{}}}