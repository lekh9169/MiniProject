{"id":"node_modules/tsparticles/dist/Utils/ColorUtils.js","dependencies":[{"name":"E:\\Ment-master\\package.json","includedInParent":true,"mtime":1593073115667},{"name":"E:\\Ment-master\\.babelrc","includedInParent":true,"mtime":1592712076000},{"name":"E:\\Ment-master\\node_modules\\tsparticles\\package.json","includedInParent":true,"mtime":1593073113793},{"name":"./Utils","loc":{"line":4,"column":24},"parent":"E:\\Ment-master\\node_modules\\tsparticles\\dist\\Utils\\ColorUtils.js","resolved":"E:\\Ment-master\\node_modules\\tsparticles\\dist\\Utils\\Utils.js"},{"name":"./Constants","loc":{"line":5,"column":28},"parent":"E:\\Ment-master\\node_modules\\tsparticles\\dist\\Utils\\ColorUtils.js","resolved":"E:\\Ment-master\\node_modules\\tsparticles\\dist\\Utils\\Constants.js"}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ColorUtils = void 0;\nconst Utils_1 = require(\"./Utils\");\nconst Constants_1 = require(\"./Constants\");\nclass ColorUtils {\n    static colorToRgb(input) {\n        var _a, _b;\n        if (input === undefined) {\n            return;\n        }\n        const color = typeof input === \"string\" ? { value: input } : input;\n        let res;\n        if (typeof color.value === \"string\") {\n            if (color.value === Constants_1.Constants.randomColorValue) {\n                res = this.getRandomRgbColor();\n            }\n            else {\n                res = ColorUtils.stringToRgb(color.value);\n            }\n        }\n        else {\n            if (color.value instanceof Array) {\n                const colorSelected = Utils_1.Utils.itemFromArray(color.value);\n                res = ColorUtils.colorToRgb({ value: colorSelected });\n            }\n            else {\n                const colorValue = color.value;\n                const rgbColor = (_a = colorValue.rgb) !== null && _a !== void 0 ? _a : color.value;\n                if (rgbColor.r !== undefined) {\n                    res = rgbColor;\n                }\n                else {\n                    const hslColor = (_b = colorValue.hsl) !== null && _b !== void 0 ? _b : color.value;\n                    if (hslColor.h !== undefined) {\n                        res = ColorUtils.hslToRgb(hslColor);\n                    }\n                }\n            }\n        }\n        return res;\n    }\n    static colorToHsl(color) {\n        const rgb = this.colorToRgb(color);\n        return rgb !== undefined ? this.rgbToHsl(rgb) : rgb;\n    }\n    static rgbToHsl(color) {\n        const r1 = color.r / 255;\n        const g1 = color.g / 255;\n        const b1 = color.b / 255;\n        const maxColor = Math.max(r1, g1, b1);\n        const minColor = Math.min(r1, g1, b1);\n        const res = {\n            h: 0,\n            l: (maxColor + minColor) / 2,\n            s: 0,\n        };\n        if (maxColor != minColor) {\n            res.s =\n                res.l < 0.5\n                    ? (maxColor - minColor) / (maxColor + minColor)\n                    : (maxColor - minColor) / (2.0 - maxColor - minColor);\n            res.h =\n                r1 === maxColor\n                    ? (g1 - b1) / (maxColor - minColor)\n                    : (res.h =\n                        g1 === maxColor\n                            ? 2.0 + (b1 - r1) / (maxColor - minColor)\n                            : 4.0 + (r1 - g1) / (maxColor - minColor));\n        }\n        res.l *= 100;\n        res.s *= 100;\n        res.h *= 60;\n        if (res.h < 0) {\n            res.h += 360;\n        }\n        return res;\n    }\n    static stringToAlpha(input) {\n        var _a;\n        return (_a = ColorUtils.stringToRgba(input)) === null || _a === void 0 ? void 0 : _a.a;\n    }\n    static stringToRgb(input) {\n        return ColorUtils.stringToRgba(input);\n    }\n    static hslToRgb(hsl) {\n        const result = { b: 0, g: 0, r: 0 };\n        const hslPercent = {\n            h: hsl.h / 360,\n            l: hsl.l / 100,\n            s: hsl.s / 100,\n        };\n        if (hslPercent.s === 0) {\n            result.b = hslPercent.l;\n            result.g = hslPercent.l;\n            result.r = hslPercent.l;\n        }\n        else {\n            const q = hslPercent.l < 0.5\n                ? hslPercent.l * (1 + hslPercent.s)\n                : hslPercent.l + hslPercent.s - hslPercent.l * hslPercent.s;\n            const p = 2 * hslPercent.l - q;\n            result.r = ColorUtils.hue2rgb(p, q, hslPercent.h + 1 / 3);\n            result.g = ColorUtils.hue2rgb(p, q, hslPercent.h);\n            result.b = ColorUtils.hue2rgb(p, q, hslPercent.h - 1 / 3);\n        }\n        result.r = Math.floor(result.r * 255);\n        result.g = Math.floor(result.g * 255);\n        result.b = Math.floor(result.b * 255);\n        return result;\n    }\n    static hslaToRgba(hsla) {\n        const rgbResult = ColorUtils.hslToRgb(hsla);\n        return {\n            a: hsla.a,\n            b: rgbResult.b,\n            g: rgbResult.g,\n            r: rgbResult.r,\n        };\n    }\n    static getRandomRgbColor(min) {\n        var _a;\n        const fixedMin = min || 0;\n        const minColor = fixedMin + fixedMin * Math.pow(16, 2) + fixedMin * Math.pow(16, 4);\n        const factor = minColor ^ 0xffffff;\n        const randomColor = Math.floor((Math.random() * factor) | minColor).toString(16);\n        return ((_a = this.stringToRgb(`#${randomColor}`)) !== null && _a !== void 0 ? _a : {\n            b: 0,\n            g: 0,\n            r: 0,\n        });\n    }\n    static getStyleFromRgb(color, opacity) {\n        return `rgba(${color.r}, ${color.g}, ${color.b}, ${opacity !== null && opacity !== void 0 ? opacity : 1})`;\n    }\n    static getStyleFromHsl(color, opacity) {\n        return `hsla(${color.h}, ${color.s}%, ${color.l}%, ${opacity !== null && opacity !== void 0 ? opacity : 1})`;\n    }\n    static mix(color1, color2, size1, size2) {\n        let rgb1 = color1;\n        let rgb2 = color2;\n        if (rgb1.r === undefined) {\n            rgb1 = this.hslToRgb(color1);\n        }\n        if (rgb2.r === undefined) {\n            rgb2 = this.hslToRgb(color2);\n        }\n        return {\n            b: Utils_1.Utils.mix(rgb1.b, rgb2.b, size1, size2),\n            g: Utils_1.Utils.mix(rgb1.g, rgb2.g, size1, size2),\n            r: Utils_1.Utils.mix(rgb1.r, rgb2.r, size1, size2),\n        };\n    }\n    static hue2rgb(p, q, t) {\n        let tCalc = t;\n        if (tCalc < 0) {\n            tCalc += 1;\n        }\n        if (tCalc > 1) {\n            tCalc -= 1;\n        }\n        if (tCalc < 1 / 6) {\n            return p + (q - p) * 6 * tCalc;\n        }\n        if (tCalc < 1 / 2) {\n            return q;\n        }\n        if (tCalc < 2 / 3) {\n            return p + (q - p) * (2 / 3 - tCalc) * 6;\n        }\n        return p;\n    }\n    static stringToRgba(input) {\n        if (input.startsWith(\"rgb\")) {\n            const regex = /rgba?\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(,\\s*([\\d.]+)\\s*)?\\)/i;\n            const result = regex.exec(input);\n            return result\n                ? {\n                    a: result.length > 4 ? parseFloat(result[5]) : 1,\n                    b: parseInt(result[3], 10),\n                    g: parseInt(result[2], 10),\n                    r: parseInt(result[1], 10),\n                }\n                : undefined;\n        }\n        else if (input.startsWith(\"hsl\")) {\n            const regex = /hsla?\\(\\s*(\\d+)\\s*,\\s*(\\d+)%\\s*,\\s*(\\d+)%\\s*(,\\s*([\\d.]+)\\s*)?\\)/i;\n            const result = regex.exec(input);\n            return result\n                ? ColorUtils.hslaToRgba({\n                    a: result.length > 4 ? parseFloat(result[5]) : 1,\n                    h: parseInt(result[1], 10),\n                    l: parseInt(result[3], 10),\n                    s: parseInt(result[2], 10),\n                })\n                : undefined;\n        }\n        else {\n            const shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])([a-f\\d])?$/i;\n            const hexFixed = input.replace(shorthandRegex, (_m, r, g, b, a) => {\n                return r + r + g + g + b + b + (a !== undefined ? a + a : \"\");\n            });\n            const regex = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})?$/i;\n            const result = regex.exec(hexFixed);\n            return result\n                ? {\n                    a: result[4] !== undefined ? parseInt(result[4], 16) / 0xff : 1,\n                    b: parseInt(result[3], 16),\n                    g: parseInt(result[2], 16),\n                    r: parseInt(result[1], 16),\n                }\n                : undefined;\n        }\n    }\n}\nexports.ColorUtils = ColorUtils;\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/ColorUtils.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}}],"sources":{"node_modules/tsparticles/dist/Utils/ColorUtils.js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ColorUtils = void 0;\nconst Utils_1 = require(\"./Utils\");\nconst Constants_1 = require(\"./Constants\");\nclass ColorUtils {\n    static colorToRgb(input) {\n        var _a, _b;\n        if (input === undefined) {\n            return;\n        }\n        const color = typeof input === \"string\" ? { value: input } : input;\n        let res;\n        if (typeof color.value === \"string\") {\n            if (color.value === Constants_1.Constants.randomColorValue) {\n                res = this.getRandomRgbColor();\n            }\n            else {\n                res = ColorUtils.stringToRgb(color.value);\n            }\n        }\n        else {\n            if (color.value instanceof Array) {\n                const colorSelected = Utils_1.Utils.itemFromArray(color.value);\n                res = ColorUtils.colorToRgb({ value: colorSelected });\n            }\n            else {\n                const colorValue = color.value;\n                const rgbColor = (_a = colorValue.rgb) !== null && _a !== void 0 ? _a : color.value;\n                if (rgbColor.r !== undefined) {\n                    res = rgbColor;\n                }\n                else {\n                    const hslColor = (_b = colorValue.hsl) !== null && _b !== void 0 ? _b : color.value;\n                    if (hslColor.h !== undefined) {\n                        res = ColorUtils.hslToRgb(hslColor);\n                    }\n                }\n            }\n        }\n        return res;\n    }\n    static colorToHsl(color) {\n        const rgb = this.colorToRgb(color);\n        return rgb !== undefined ? this.rgbToHsl(rgb) : rgb;\n    }\n    static rgbToHsl(color) {\n        const r1 = color.r / 255;\n        const g1 = color.g / 255;\n        const b1 = color.b / 255;\n        const maxColor = Math.max(r1, g1, b1);\n        const minColor = Math.min(r1, g1, b1);\n        const res = {\n            h: 0,\n            l: (maxColor + minColor) / 2,\n            s: 0,\n        };\n        if (maxColor != minColor) {\n            res.s =\n                res.l < 0.5\n                    ? (maxColor - minColor) / (maxColor + minColor)\n                    : (maxColor - minColor) / (2.0 - maxColor - minColor);\n            res.h =\n                r1 === maxColor\n                    ? (g1 - b1) / (maxColor - minColor)\n                    : (res.h =\n                        g1 === maxColor\n                            ? 2.0 + (b1 - r1) / (maxColor - minColor)\n                            : 4.0 + (r1 - g1) / (maxColor - minColor));\n        }\n        res.l *= 100;\n        res.s *= 100;\n        res.h *= 60;\n        if (res.h < 0) {\n            res.h += 360;\n        }\n        return res;\n    }\n    static stringToAlpha(input) {\n        var _a;\n        return (_a = ColorUtils.stringToRgba(input)) === null || _a === void 0 ? void 0 : _a.a;\n    }\n    static stringToRgb(input) {\n        return ColorUtils.stringToRgba(input);\n    }\n    static hslToRgb(hsl) {\n        const result = { b: 0, g: 0, r: 0 };\n        const hslPercent = {\n            h: hsl.h / 360,\n            l: hsl.l / 100,\n            s: hsl.s / 100,\n        };\n        if (hslPercent.s === 0) {\n            result.b = hslPercent.l;\n            result.g = hslPercent.l;\n            result.r = hslPercent.l;\n        }\n        else {\n            const q = hslPercent.l < 0.5\n                ? hslPercent.l * (1 + hslPercent.s)\n                : hslPercent.l + hslPercent.s - hslPercent.l * hslPercent.s;\n            const p = 2 * hslPercent.l - q;\n            result.r = ColorUtils.hue2rgb(p, q, hslPercent.h + 1 / 3);\n            result.g = ColorUtils.hue2rgb(p, q, hslPercent.h);\n            result.b = ColorUtils.hue2rgb(p, q, hslPercent.h - 1 / 3);\n        }\n        result.r = Math.floor(result.r * 255);\n        result.g = Math.floor(result.g * 255);\n        result.b = Math.floor(result.b * 255);\n        return result;\n    }\n    static hslaToRgba(hsla) {\n        const rgbResult = ColorUtils.hslToRgb(hsla);\n        return {\n            a: hsla.a,\n            b: rgbResult.b,\n            g: rgbResult.g,\n            r: rgbResult.r,\n        };\n    }\n    static getRandomRgbColor(min) {\n        var _a;\n        const fixedMin = min || 0;\n        const minColor = fixedMin + fixedMin * Math.pow(16, 2) + fixedMin * Math.pow(16, 4);\n        const factor = minColor ^ 0xffffff;\n        const randomColor = Math.floor((Math.random() * factor) | minColor).toString(16);\n        return ((_a = this.stringToRgb(`#${randomColor}`)) !== null && _a !== void 0 ? _a : {\n            b: 0,\n            g: 0,\n            r: 0,\n        });\n    }\n    static getStyleFromRgb(color, opacity) {\n        return `rgba(${color.r}, ${color.g}, ${color.b}, ${opacity !== null && opacity !== void 0 ? opacity : 1})`;\n    }\n    static getStyleFromHsl(color, opacity) {\n        return `hsla(${color.h}, ${color.s}%, ${color.l}%, ${opacity !== null && opacity !== void 0 ? opacity : 1})`;\n    }\n    static mix(color1, color2, size1, size2) {\n        let rgb1 = color1;\n        let rgb2 = color2;\n        if (rgb1.r === undefined) {\n            rgb1 = this.hslToRgb(color1);\n        }\n        if (rgb2.r === undefined) {\n            rgb2 = this.hslToRgb(color2);\n        }\n        return {\n            b: Utils_1.Utils.mix(rgb1.b, rgb2.b, size1, size2),\n            g: Utils_1.Utils.mix(rgb1.g, rgb2.g, size1, size2),\n            r: Utils_1.Utils.mix(rgb1.r, rgb2.r, size1, size2),\n        };\n    }\n    static hue2rgb(p, q, t) {\n        let tCalc = t;\n        if (tCalc < 0) {\n            tCalc += 1;\n        }\n        if (tCalc > 1) {\n            tCalc -= 1;\n        }\n        if (tCalc < 1 / 6) {\n            return p + (q - p) * 6 * tCalc;\n        }\n        if (tCalc < 1 / 2) {\n            return q;\n        }\n        if (tCalc < 2 / 3) {\n            return p + (q - p) * (2 / 3 - tCalc) * 6;\n        }\n        return p;\n    }\n    static stringToRgba(input) {\n        if (input.startsWith(\"rgb\")) {\n            const regex = /rgba?\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(,\\s*([\\d.]+)\\s*)?\\)/i;\n            const result = regex.exec(input);\n            return result\n                ? {\n                    a: result.length > 4 ? parseFloat(result[5]) : 1,\n                    b: parseInt(result[3], 10),\n                    g: parseInt(result[2], 10),\n                    r: parseInt(result[1], 10),\n                }\n                : undefined;\n        }\n        else if (input.startsWith(\"hsl\")) {\n            const regex = /hsla?\\(\\s*(\\d+)\\s*,\\s*(\\d+)%\\s*,\\s*(\\d+)%\\s*(,\\s*([\\d.]+)\\s*)?\\)/i;\n            const result = regex.exec(input);\n            return result\n                ? ColorUtils.hslaToRgba({\n                    a: result.length > 4 ? parseFloat(result[5]) : 1,\n                    h: parseInt(result[1], 10),\n                    l: parseInt(result[3], 10),\n                    s: parseInt(result[2], 10),\n                })\n                : undefined;\n        }\n        else {\n            const shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])([a-f\\d])?$/i;\n            const hexFixed = input.replace(shorthandRegex, (_m, r, g, b, a) => {\n                return r + r + g + g + b + b + (a !== undefined ? a + a : \"\");\n            });\n            const regex = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})?$/i;\n            const result = regex.exec(hexFixed);\n            return result\n                ? {\n                    a: result[4] !== undefined ? parseInt(result[4], 16) / 0xff : 1,\n                    b: parseInt(result[3], 16),\n                    g: parseInt(result[2], 16),\n                    r: parseInt(result[1], 16),\n                }\n                : undefined;\n        }\n    }\n}\nexports.ColorUtils = ColorUtils;\n"},"lineCount":217}},"error":null,"hash":"66221bea25261e6b2c9c7ebdcc8d4d7d","cacheData":{"env":{}}}