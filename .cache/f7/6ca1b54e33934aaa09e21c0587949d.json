{"id":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","dependencies":[{"name":"E:\\Ment-master\\package.json","includedInParent":true,"mtime":1593073115667},{"name":"E:\\Ment-master\\.babelrc","includedInParent":true,"mtime":1592712076000},{"name":"E:\\Ment-master\\node_modules\\tsparticles\\package.json","includedInParent":true,"mtime":1593073113793},{"name":"./ColorUtils","loc":{"line":4,"column":29},"parent":"E:\\Ment-master\\node_modules\\tsparticles\\dist\\Utils\\CanvasUtils.js","resolved":"E:\\Ment-master\\node_modules\\tsparticles\\dist\\Utils\\ColorUtils.js"},{"name":"./Utils","loc":{"line":5,"column":24},"parent":"E:\\Ment-master\\node_modules\\tsparticles\\dist\\Utils\\CanvasUtils.js","resolved":"E:\\Ment-master\\node_modules\\tsparticles\\dist\\Utils\\Utils.js"}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CanvasUtils = void 0;\nconst ColorUtils_1 = require(\"./ColorUtils\");\nconst Utils_1 = require(\"./Utils\");\nclass CanvasUtils {\n    static paintBase(context, dimension, baseColor) {\n        context.save();\n        context.fillStyle = baseColor !== null && baseColor !== void 0 ? baseColor : \"rgba(0,0,0,0)\";\n        context.fillRect(0, 0, dimension.width, dimension.height);\n        context.restore();\n    }\n    static clear(context, dimension) {\n        context.clearRect(0, 0, dimension.width, dimension.height);\n    }\n    static drawLinkLine(context, width, begin, end, maxDistance, canvasSize, warp, backgroundMask, colorLine, opacity, shadow) {\n        let drawn = false;\n        if (Utils_1.Utils.getDistance(begin, end) <= maxDistance) {\n            this.drawLine(context, begin, end);\n            drawn = true;\n        }\n        else if (warp) {\n            let pi1;\n            let pi2;\n            const endNE = {\n                x: end.x - canvasSize.width,\n                y: end.y,\n            };\n            const { dx, dy, distance } = Utils_1.Utils.getDistances(begin, endNE);\n            if (distance <= maxDistance) {\n                const yi = begin.y - (dy / dx) * begin.x;\n                pi1 = { x: 0, y: yi };\n                pi2 = { x: canvasSize.width, y: yi };\n            }\n            else {\n                const endSW = {\n                    x: end.x,\n                    y: end.y - canvasSize.height,\n                };\n                const { dx, dy, distance } = Utils_1.Utils.getDistances(begin, endSW);\n                if (distance <= maxDistance) {\n                    const yi = begin.y - (dy / dx) * begin.x;\n                    const xi = -yi / (dy / dx);\n                    pi1 = { x: xi, y: 0 };\n                    pi2 = { x: xi, y: canvasSize.height };\n                }\n                else {\n                    const endSE = {\n                        x: end.x - canvasSize.width,\n                        y: end.y - canvasSize.height,\n                    };\n                    const { dx, dy, distance } = Utils_1.Utils.getDistances(begin, endSE);\n                    if (distance <= maxDistance) {\n                        const yi = begin.y - (dy / dx) * begin.x;\n                        const xi = -yi / (dy / dx);\n                        pi1 = { x: xi, y: yi };\n                        pi2 = { x: pi1.x + canvasSize.width, y: pi1.y + canvasSize.height };\n                    }\n                }\n            }\n            if (pi1 && pi2) {\n                this.drawLine(context, begin, pi1);\n                this.drawLine(context, end, pi2);\n                drawn = true;\n            }\n        }\n        if (!drawn) {\n            return;\n        }\n        context.lineWidth = width;\n        if (backgroundMask) {\n            context.globalCompositeOperation = \"destination-out\";\n        }\n        context.strokeStyle = ColorUtils_1.ColorUtils.getStyleFromRgb(colorLine, opacity);\n        if (shadow.enable) {\n            const shadowColor = ColorUtils_1.ColorUtils.colorToRgb(shadow.color);\n            if (shadowColor) {\n                context.shadowBlur = shadow.blur;\n                context.shadowColor = ColorUtils_1.ColorUtils.getStyleFromRgb(shadowColor);\n            }\n        }\n        context.stroke();\n    }\n    static drawLinkTriangle(context, width, pos1, pos2, pos3, backgroundMask, colorTriangle, opacityTriangle) {\n        this.drawTriangle(context, pos1, pos2, pos3);\n        context.lineWidth = width;\n        if (backgroundMask) {\n            context.globalCompositeOperation = \"destination-out\";\n        }\n        context.fillStyle = ColorUtils_1.ColorUtils.getStyleFromRgb(colorTriangle, opacityTriangle);\n        context.fill();\n    }\n    static drawConnectLine(context, width, lineStyle, begin, end) {\n        context.save();\n        this.drawLine(context, begin, end);\n        context.lineWidth = width;\n        context.strokeStyle = lineStyle;\n        context.stroke();\n        context.restore();\n    }\n    static gradient(context, p1, p2, opacity) {\n        const gradStop = Math.floor(p2.size.value / p1.size.value);\n        const color1 = p1.getColor();\n        const color2 = p2.getColor();\n        if (!color1 || !color2) {\n            return;\n        }\n        const sourcePos = p1.getPosition();\n        const destPos = p2.getPosition();\n        const midRgb = ColorUtils_1.ColorUtils.mix(color1, color2, p1.size.value, p2.size.value);\n        const grad = context.createLinearGradient(sourcePos.x, sourcePos.y, destPos.x, destPos.y);\n        grad.addColorStop(0, ColorUtils_1.ColorUtils.getStyleFromHsl(color1, opacity));\n        grad.addColorStop(gradStop > 1 ? 1 : gradStop, ColorUtils_1.ColorUtils.getStyleFromRgb(midRgb, opacity));\n        grad.addColorStop(1, ColorUtils_1.ColorUtils.getStyleFromHsl(color2, opacity));\n        return grad;\n    }\n    static drawGrabLine(context, width, begin, end, colorLine, opacity) {\n        context.save();\n        this.drawLine(context, begin, end);\n        context.strokeStyle = ColorUtils_1.ColorUtils.getStyleFromRgb(colorLine, opacity);\n        context.lineWidth = width;\n        context.stroke();\n        context.restore();\n    }\n    static drawParticle(container, context, particle, delta, colorValue, backgroundMask, radius, opacity, shadow) {\n        const pos = particle.getPosition();\n        context.save();\n        context.translate(pos.x, pos.y);\n        context.beginPath();\n        if (particle.angle !== 0) {\n            context.rotate((particle.angle * Math.PI) / 180);\n        }\n        if (backgroundMask) {\n            context.globalCompositeOperation = \"destination-out\";\n        }\n        const shadowColor = particle.shadowColor;\n        if (shadow.enable && shadowColor) {\n            context.shadowBlur = shadow.blur;\n            context.shadowColor = ColorUtils_1.ColorUtils.getStyleFromRgb(shadowColor);\n            context.shadowOffsetX = shadow.offset.x;\n            context.shadowOffsetY = shadow.offset.y;\n        }\n        context.fillStyle = colorValue;\n        const stroke = particle.stroke;\n        context.lineWidth = stroke.width;\n        if (particle.strokeColor) {\n            context.strokeStyle = ColorUtils_1.ColorUtils.getStyleFromRgb(particle.strokeColor, particle.stroke.opacity);\n        }\n        if (particle.close) {\n            context.closePath();\n        }\n        this.drawShape(container, context, particle, radius, opacity, delta);\n        if (stroke.width > 0 && particle.strokeColor) {\n            context.stroke();\n        }\n        if (particle.fill) {\n            context.fill();\n        }\n        context.restore();\n        context.save();\n        context.translate(pos.x, pos.y);\n        if (particle.angle !== 0) {\n            context.rotate((particle.angle * Math.PI) / 180);\n        }\n        if (backgroundMask) {\n            context.globalCompositeOperation = \"destination-out\";\n        }\n        this.drawShapeAfterEffect(container, context, particle, radius, opacity, delta);\n        context.restore();\n    }\n    static drawShape(container, context, particle, radius, opacity, delta) {\n        if (!particle.shape) {\n            return;\n        }\n        const drawer = container.drawers.get(particle.shape);\n        if (!drawer) {\n            return;\n        }\n        drawer.draw(context, particle, radius, opacity, delta);\n    }\n    static drawShapeAfterEffect(container, context, particle, radius, opacity, delta) {\n        if (!particle.shape) {\n            return;\n        }\n        const drawer = container.drawers.get(particle.shape);\n        if (!(drawer === null || drawer === void 0 ? void 0 : drawer.afterEffect)) {\n            return;\n        }\n        drawer.afterEffect(context, particle, radius, opacity, delta);\n    }\n    static drawPlugin(context, plugin, delta) {\n        if (plugin.draw !== undefined) {\n            context.save();\n            plugin.draw(context, delta);\n            context.restore();\n        }\n    }\n    static drawLine(context, begin, end) {\n        context.beginPath();\n        context.moveTo(begin.x, begin.y);\n        context.lineTo(end.x, end.y);\n        context.closePath();\n    }\n    static drawTriangle(context, p1, p2, p3) {\n        context.beginPath();\n        context.moveTo(p1.x, p1.y);\n        context.lineTo(p2.x, p2.y);\n        context.lineTo(p3.x, p3.y);\n        context.closePath();\n    }\n}\nexports.CanvasUtils = CanvasUtils;\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/CanvasUtils.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}}],"sources":{"node_modules/tsparticles/dist/Utils/CanvasUtils.js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CanvasUtils = void 0;\nconst ColorUtils_1 = require(\"./ColorUtils\");\nconst Utils_1 = require(\"./Utils\");\nclass CanvasUtils {\n    static paintBase(context, dimension, baseColor) {\n        context.save();\n        context.fillStyle = baseColor !== null && baseColor !== void 0 ? baseColor : \"rgba(0,0,0,0)\";\n        context.fillRect(0, 0, dimension.width, dimension.height);\n        context.restore();\n    }\n    static clear(context, dimension) {\n        context.clearRect(0, 0, dimension.width, dimension.height);\n    }\n    static drawLinkLine(context, width, begin, end, maxDistance, canvasSize, warp, backgroundMask, colorLine, opacity, shadow) {\n        let drawn = false;\n        if (Utils_1.Utils.getDistance(begin, end) <= maxDistance) {\n            this.drawLine(context, begin, end);\n            drawn = true;\n        }\n        else if (warp) {\n            let pi1;\n            let pi2;\n            const endNE = {\n                x: end.x - canvasSize.width,\n                y: end.y,\n            };\n            const { dx, dy, distance } = Utils_1.Utils.getDistances(begin, endNE);\n            if (distance <= maxDistance) {\n                const yi = begin.y - (dy / dx) * begin.x;\n                pi1 = { x: 0, y: yi };\n                pi2 = { x: canvasSize.width, y: yi };\n            }\n            else {\n                const endSW = {\n                    x: end.x,\n                    y: end.y - canvasSize.height,\n                };\n                const { dx, dy, distance } = Utils_1.Utils.getDistances(begin, endSW);\n                if (distance <= maxDistance) {\n                    const yi = begin.y - (dy / dx) * begin.x;\n                    const xi = -yi / (dy / dx);\n                    pi1 = { x: xi, y: 0 };\n                    pi2 = { x: xi, y: canvasSize.height };\n                }\n                else {\n                    const endSE = {\n                        x: end.x - canvasSize.width,\n                        y: end.y - canvasSize.height,\n                    };\n                    const { dx, dy, distance } = Utils_1.Utils.getDistances(begin, endSE);\n                    if (distance <= maxDistance) {\n                        const yi = begin.y - (dy / dx) * begin.x;\n                        const xi = -yi / (dy / dx);\n                        pi1 = { x: xi, y: yi };\n                        pi2 = { x: pi1.x + canvasSize.width, y: pi1.y + canvasSize.height };\n                    }\n                }\n            }\n            if (pi1 && pi2) {\n                this.drawLine(context, begin, pi1);\n                this.drawLine(context, end, pi2);\n                drawn = true;\n            }\n        }\n        if (!drawn) {\n            return;\n        }\n        context.lineWidth = width;\n        if (backgroundMask) {\n            context.globalCompositeOperation = \"destination-out\";\n        }\n        context.strokeStyle = ColorUtils_1.ColorUtils.getStyleFromRgb(colorLine, opacity);\n        if (shadow.enable) {\n            const shadowColor = ColorUtils_1.ColorUtils.colorToRgb(shadow.color);\n            if (shadowColor) {\n                context.shadowBlur = shadow.blur;\n                context.shadowColor = ColorUtils_1.ColorUtils.getStyleFromRgb(shadowColor);\n            }\n        }\n        context.stroke();\n    }\n    static drawLinkTriangle(context, width, pos1, pos2, pos3, backgroundMask, colorTriangle, opacityTriangle) {\n        this.drawTriangle(context, pos1, pos2, pos3);\n        context.lineWidth = width;\n        if (backgroundMask) {\n            context.globalCompositeOperation = \"destination-out\";\n        }\n        context.fillStyle = ColorUtils_1.ColorUtils.getStyleFromRgb(colorTriangle, opacityTriangle);\n        context.fill();\n    }\n    static drawConnectLine(context, width, lineStyle, begin, end) {\n        context.save();\n        this.drawLine(context, begin, end);\n        context.lineWidth = width;\n        context.strokeStyle = lineStyle;\n        context.stroke();\n        context.restore();\n    }\n    static gradient(context, p1, p2, opacity) {\n        const gradStop = Math.floor(p2.size.value / p1.size.value);\n        const color1 = p1.getColor();\n        const color2 = p2.getColor();\n        if (!color1 || !color2) {\n            return;\n        }\n        const sourcePos = p1.getPosition();\n        const destPos = p2.getPosition();\n        const midRgb = ColorUtils_1.ColorUtils.mix(color1, color2, p1.size.value, p2.size.value);\n        const grad = context.createLinearGradient(sourcePos.x, sourcePos.y, destPos.x, destPos.y);\n        grad.addColorStop(0, ColorUtils_1.ColorUtils.getStyleFromHsl(color1, opacity));\n        grad.addColorStop(gradStop > 1 ? 1 : gradStop, ColorUtils_1.ColorUtils.getStyleFromRgb(midRgb, opacity));\n        grad.addColorStop(1, ColorUtils_1.ColorUtils.getStyleFromHsl(color2, opacity));\n        return grad;\n    }\n    static drawGrabLine(context, width, begin, end, colorLine, opacity) {\n        context.save();\n        this.drawLine(context, begin, end);\n        context.strokeStyle = ColorUtils_1.ColorUtils.getStyleFromRgb(colorLine, opacity);\n        context.lineWidth = width;\n        context.stroke();\n        context.restore();\n    }\n    static drawParticle(container, context, particle, delta, colorValue, backgroundMask, radius, opacity, shadow) {\n        const pos = particle.getPosition();\n        context.save();\n        context.translate(pos.x, pos.y);\n        context.beginPath();\n        if (particle.angle !== 0) {\n            context.rotate((particle.angle * Math.PI) / 180);\n        }\n        if (backgroundMask) {\n            context.globalCompositeOperation = \"destination-out\";\n        }\n        const shadowColor = particle.shadowColor;\n        if (shadow.enable && shadowColor) {\n            context.shadowBlur = shadow.blur;\n            context.shadowColor = ColorUtils_1.ColorUtils.getStyleFromRgb(shadowColor);\n            context.shadowOffsetX = shadow.offset.x;\n            context.shadowOffsetY = shadow.offset.y;\n        }\n        context.fillStyle = colorValue;\n        const stroke = particle.stroke;\n        context.lineWidth = stroke.width;\n        if (particle.strokeColor) {\n            context.strokeStyle = ColorUtils_1.ColorUtils.getStyleFromRgb(particle.strokeColor, particle.stroke.opacity);\n        }\n        if (particle.close) {\n            context.closePath();\n        }\n        this.drawShape(container, context, particle, radius, opacity, delta);\n        if (stroke.width > 0 && particle.strokeColor) {\n            context.stroke();\n        }\n        if (particle.fill) {\n            context.fill();\n        }\n        context.restore();\n        context.save();\n        context.translate(pos.x, pos.y);\n        if (particle.angle !== 0) {\n            context.rotate((particle.angle * Math.PI) / 180);\n        }\n        if (backgroundMask) {\n            context.globalCompositeOperation = \"destination-out\";\n        }\n        this.drawShapeAfterEffect(container, context, particle, radius, opacity, delta);\n        context.restore();\n    }\n    static drawShape(container, context, particle, radius, opacity, delta) {\n        if (!particle.shape) {\n            return;\n        }\n        const drawer = container.drawers.get(particle.shape);\n        if (!drawer) {\n            return;\n        }\n        drawer.draw(context, particle, radius, opacity, delta);\n    }\n    static drawShapeAfterEffect(container, context, particle, radius, opacity, delta) {\n        if (!particle.shape) {\n            return;\n        }\n        const drawer = container.drawers.get(particle.shape);\n        if (!(drawer === null || drawer === void 0 ? void 0 : drawer.afterEffect)) {\n            return;\n        }\n        drawer.afterEffect(context, particle, radius, opacity, delta);\n    }\n    static drawPlugin(context, plugin, delta) {\n        if (plugin.draw !== undefined) {\n            context.save();\n            plugin.draw(context, delta);\n            context.restore();\n        }\n    }\n    static drawLine(context, begin, end) {\n        context.beginPath();\n        context.moveTo(begin.x, begin.y);\n        context.lineTo(end.x, end.y);\n        context.closePath();\n    }\n    static drawTriangle(context, p1, p2, p3) {\n        context.beginPath();\n        context.moveTo(p1.x, p1.y);\n        context.lineTo(p2.x, p2.y);\n        context.lineTo(p3.x, p3.y);\n        context.closePath();\n    }\n}\nexports.CanvasUtils = CanvasUtils;\n"},"lineCount":213}},"error":null,"hash":"5e48eb887aac71f48e636f1f06386ae4","cacheData":{"env":{}}}