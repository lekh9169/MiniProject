{"id":"node_modules/tsparticles/dist/Utils/Utils.js","dependencies":[{"name":"E:\\Ment-master\\package.json","includedInParent":true,"mtime":1593073115667},{"name":"E:\\Ment-master\\.babelrc","includedInParent":true,"mtime":1592712076000},{"name":"E:\\Ment-master\\node_modules\\tsparticles\\package.json","includedInParent":true,"mtime":1593073113793},{"name":"../Enums","loc":{"line":13,"column":24},"parent":"E:\\Ment-master\\node_modules\\tsparticles\\dist\\Utils\\Utils.js","resolved":"E:\\Ment-master\\node_modules\\tsparticles\\dist\\Enums\\index.js"},{"name":"./ColorUtils","loc":{"line":14,"column":29},"parent":"E:\\Ment-master\\node_modules\\tsparticles\\dist\\Utils\\Utils.js","resolved":"E:\\Ment-master\\node_modules\\tsparticles\\dist\\Utils\\ColorUtils.js"}],"generated":{"js":"\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Utils = void 0;\nconst Enums_1 = require(\"../Enums\");\nconst ColorUtils_1 = require(\"./ColorUtils\");\nclass Utils {\n    static isSsr() {\n        return typeof window === \"undefined\" || !window;\n    }\n    static get animate() {\n        return this.isSsr()\n            ? (callback) => setTimeout(callback)\n            : (callback) => (window.requestAnimationFrame ||\n                window.webkitRequestAnimationFrame ||\n                window.mozRequestAnimationFrame ||\n                window.oRequestAnimationFrame ||\n                window.msRequestAnimationFrame ||\n                window.setTimeout)(callback);\n    }\n    static get cancelAnimation() {\n        return this.isSsr()\n            ? (handle) => clearTimeout(handle)\n            : (handle) => (window.cancelAnimationFrame ||\n                window.webkitCancelRequestAnimationFrame ||\n                window.mozCancelRequestAnimationFrame ||\n                window.oCancelRequestAnimationFrame ||\n                window.msCancelRequestAnimationFrame ||\n                window.clearTimeout)(handle);\n    }\n    static replaceColorSvg(image, color, opacity) {\n        if (!image.svgData) {\n            return \"\";\n        }\n        const svgXml = image.svgData;\n        const rgbHex = /#([0-9A-F]{3,6})/gi;\n        return svgXml.replace(rgbHex, () => ColorUtils_1.ColorUtils.getStyleFromHsl(color, opacity));\n    }\n    static clamp(num, min, max) {\n        return Math.min(Math.max(num, min), max);\n    }\n    static isInArray(value, array) {\n        return value === array || (array instanceof Array && array.indexOf(value) > -1);\n    }\n    static mix(comp1, comp2, weight1, weight2) {\n        return Math.floor((comp1 * weight1 + comp2 * weight2) / (weight1 + weight2));\n    }\n    static getParticleBaseVelocity(particle) {\n        let velocityBase;\n        switch (particle.direction) {\n            case Enums_1.MoveDirection.top:\n                velocityBase = { x: 0, y: -1 };\n                break;\n            case Enums_1.MoveDirection.topRight:\n                velocityBase = { x: 0.5, y: -0.5 };\n                break;\n            case Enums_1.MoveDirection.right:\n                velocityBase = { x: 1, y: -0 };\n                break;\n            case Enums_1.MoveDirection.bottomRight:\n                velocityBase = { x: 0.5, y: 0.5 };\n                break;\n            case Enums_1.MoveDirection.bottom:\n                velocityBase = { x: 0, y: 1 };\n                break;\n            case Enums_1.MoveDirection.bottomLeft:\n                velocityBase = { x: -0.5, y: 1 };\n                break;\n            case Enums_1.MoveDirection.left:\n                velocityBase = { x: -1, y: 0 };\n                break;\n            case Enums_1.MoveDirection.topLeft:\n                velocityBase = { x: -0.5, y: -0.5 };\n                break;\n            default:\n                velocityBase = { x: 0, y: 0 };\n                break;\n        }\n        return velocityBase;\n    }\n    static getDistances(pointA, pointB) {\n        const dx = pointA.x - pointB.x;\n        const dy = pointA.y - pointB.y;\n        return { dx: dx, dy: dy, distance: Math.sqrt(dx * dx + dy * dy) };\n    }\n    static getDistance(pointA, pointB) {\n        return this.getDistances(pointA, pointB).distance;\n    }\n    static loadFont(character) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                yield document.fonts.load(`${character.weight} 36px '${character.font}'`);\n            }\n            catch (_a) {\n            }\n        });\n    }\n    static arrayRandomIndex(array) {\n        return Math.floor(Math.random() * array.length);\n    }\n    static itemFromArray(array, index) {\n        return array[index !== undefined ? index : this.arrayRandomIndex(array)];\n    }\n    static randomInRange(r1, r2) {\n        const max = Math.max(r1, r2);\n        const min = Math.min(r1, r2);\n        return Math.random() * (max - min) + min;\n    }\n    static isPointInside(point, size, radius) {\n        return this.areBoundsInside(this.calculateBounds(point, radius !== null && radius !== void 0 ? radius : 0), size);\n    }\n    static areBoundsInside(bounds, size) {\n        return bounds.left < size.width && bounds.right > 0 && bounds.top < size.height && bounds.bottom > 0;\n    }\n    static calculateBounds(point, radius) {\n        return {\n            bottom: point.y + radius,\n            left: point.x - radius,\n            right: point.x + radius,\n            top: point.y - radius,\n        };\n    }\n    static loadImage(source) {\n        return new Promise((resolve, reject) => {\n            const image = {\n                source: source,\n                type: source.substr(source.length - 3),\n            };\n            if (source) {\n                const img = new Image();\n                img.addEventListener(\"load\", () => {\n                    image.element = img;\n                    resolve(image);\n                });\n                img.addEventListener(\"error\", () => {\n                    reject(`Error tsParticles - loading image: ${source}`);\n                });\n                img.src = source;\n            }\n            else {\n                reject(\"Error tsParticles - No image.src\");\n            }\n        });\n    }\n    static downloadSvgImage(source) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (source) {\n                const image = {\n                    source: source,\n                    type: source.substr(source.length - 3),\n                };\n                if (image.type !== \"svg\") {\n                    return this.loadImage(source);\n                }\n                const response = yield fetch(image.source);\n                if (response.ok) {\n                    image.svgData = yield response.text();\n                    return image;\n                }\n                else {\n                    throw new Error(\"Error tsParticles - Image not found\");\n                }\n            }\n            else {\n                throw new Error(\"Error tsParticles - No image.src\");\n            }\n        });\n    }\n    static deepExtend(destination, ...sources) {\n        for (const source of sources) {\n            if (source === undefined || source === null) {\n                continue;\n            }\n            if (typeof source !== \"object\") {\n                destination = source;\n                continue;\n            }\n            const sourceIsArray = Array.isArray(source);\n            if (sourceIsArray && (typeof destination !== \"object\" || !destination || !Array.isArray(destination))) {\n                destination = [];\n            }\n            else if (!sourceIsArray &&\n                (typeof destination !== \"object\" || !destination || Array.isArray(destination))) {\n                destination = {};\n            }\n            for (const key in source) {\n                if (key === \"__proto__\") {\n                    continue;\n                }\n                const value = source[key];\n                const isObject = typeof value === \"object\";\n                destination[key] =\n                    isObject && Array.isArray(value)\n                        ? value.map((v) => this.deepExtend(destination[key], v))\n                        : this.deepExtend(destination[key], value);\n            }\n        }\n        return destination;\n    }\n    static isDivModeEnabled(mode, divs) {\n        return divs instanceof Array\n            ? divs.filter((t) => t.enable && Utils.isInArray(mode, t.mode)).length > 0\n            : Utils.isInArray(mode, divs.mode);\n    }\n    static divModeExecute(mode, divs, callback) {\n        if (divs instanceof Array) {\n            for (const div of divs) {\n                const divMode = div.mode;\n                const divEnabled = div.enable;\n                if (divEnabled && Utils.isInArray(mode, divMode)) {\n                    this.singleDivModeExecute(div, callback);\n                }\n            }\n        }\n        else {\n            const divMode = divs.mode;\n            const divEnabled = divs.enable;\n            if (divEnabled && Utils.isInArray(mode, divMode)) {\n                this.singleDivModeExecute(divs, callback);\n            }\n        }\n    }\n    static singleDivModeExecute(div, callback) {\n        const ids = div.ids;\n        if (ids instanceof Array) {\n            for (const id of ids) {\n                callback(id, div);\n            }\n        }\n        else {\n            callback(ids, div);\n        }\n    }\n    static divMode(divs, divId) {\n        if (!divId) {\n            return;\n        }\n        if (!divs) {\n            return;\n        }\n        if (divs instanceof Array) {\n            return divs.find((d) => Utils.isInArray(divId, d.ids));\n        }\n        else if (Utils.isInArray(divId, divs.ids)) {\n            return divs;\n        }\n    }\n}\nexports.Utils = Utils;\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"node_modules/tsparticles/dist/Utils/Utils.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}}],"sources":{"node_modules/tsparticles/dist/Utils/Utils.js":"\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Utils = void 0;\nconst Enums_1 = require(\"../Enums\");\nconst ColorUtils_1 = require(\"./ColorUtils\");\nclass Utils {\n    static isSsr() {\n        return typeof window === \"undefined\" || !window;\n    }\n    static get animate() {\n        return this.isSsr()\n            ? (callback) => setTimeout(callback)\n            : (callback) => (window.requestAnimationFrame ||\n                window.webkitRequestAnimationFrame ||\n                window.mozRequestAnimationFrame ||\n                window.oRequestAnimationFrame ||\n                window.msRequestAnimationFrame ||\n                window.setTimeout)(callback);\n    }\n    static get cancelAnimation() {\n        return this.isSsr()\n            ? (handle) => clearTimeout(handle)\n            : (handle) => (window.cancelAnimationFrame ||\n                window.webkitCancelRequestAnimationFrame ||\n                window.mozCancelRequestAnimationFrame ||\n                window.oCancelRequestAnimationFrame ||\n                window.msCancelRequestAnimationFrame ||\n                window.clearTimeout)(handle);\n    }\n    static replaceColorSvg(image, color, opacity) {\n        if (!image.svgData) {\n            return \"\";\n        }\n        const svgXml = image.svgData;\n        const rgbHex = /#([0-9A-F]{3,6})/gi;\n        return svgXml.replace(rgbHex, () => ColorUtils_1.ColorUtils.getStyleFromHsl(color, opacity));\n    }\n    static clamp(num, min, max) {\n        return Math.min(Math.max(num, min), max);\n    }\n    static isInArray(value, array) {\n        return value === array || (array instanceof Array && array.indexOf(value) > -1);\n    }\n    static mix(comp1, comp2, weight1, weight2) {\n        return Math.floor((comp1 * weight1 + comp2 * weight2) / (weight1 + weight2));\n    }\n    static getParticleBaseVelocity(particle) {\n        let velocityBase;\n        switch (particle.direction) {\n            case Enums_1.MoveDirection.top:\n                velocityBase = { x: 0, y: -1 };\n                break;\n            case Enums_1.MoveDirection.topRight:\n                velocityBase = { x: 0.5, y: -0.5 };\n                break;\n            case Enums_1.MoveDirection.right:\n                velocityBase = { x: 1, y: -0 };\n                break;\n            case Enums_1.MoveDirection.bottomRight:\n                velocityBase = { x: 0.5, y: 0.5 };\n                break;\n            case Enums_1.MoveDirection.bottom:\n                velocityBase = { x: 0, y: 1 };\n                break;\n            case Enums_1.MoveDirection.bottomLeft:\n                velocityBase = { x: -0.5, y: 1 };\n                break;\n            case Enums_1.MoveDirection.left:\n                velocityBase = { x: -1, y: 0 };\n                break;\n            case Enums_1.MoveDirection.topLeft:\n                velocityBase = { x: -0.5, y: -0.5 };\n                break;\n            default:\n                velocityBase = { x: 0, y: 0 };\n                break;\n        }\n        return velocityBase;\n    }\n    static getDistances(pointA, pointB) {\n        const dx = pointA.x - pointB.x;\n        const dy = pointA.y - pointB.y;\n        return { dx: dx, dy: dy, distance: Math.sqrt(dx * dx + dy * dy) };\n    }\n    static getDistance(pointA, pointB) {\n        return this.getDistances(pointA, pointB).distance;\n    }\n    static loadFont(character) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                yield document.fonts.load(`${character.weight} 36px '${character.font}'`);\n            }\n            catch (_a) {\n            }\n        });\n    }\n    static arrayRandomIndex(array) {\n        return Math.floor(Math.random() * array.length);\n    }\n    static itemFromArray(array, index) {\n        return array[index !== undefined ? index : this.arrayRandomIndex(array)];\n    }\n    static randomInRange(r1, r2) {\n        const max = Math.max(r1, r2);\n        const min = Math.min(r1, r2);\n        return Math.random() * (max - min) + min;\n    }\n    static isPointInside(point, size, radius) {\n        return this.areBoundsInside(this.calculateBounds(point, radius !== null && radius !== void 0 ? radius : 0), size);\n    }\n    static areBoundsInside(bounds, size) {\n        return bounds.left < size.width && bounds.right > 0 && bounds.top < size.height && bounds.bottom > 0;\n    }\n    static calculateBounds(point, radius) {\n        return {\n            bottom: point.y + radius,\n            left: point.x - radius,\n            right: point.x + radius,\n            top: point.y - radius,\n        };\n    }\n    static loadImage(source) {\n        return new Promise((resolve, reject) => {\n            const image = {\n                source: source,\n                type: source.substr(source.length - 3),\n            };\n            if (source) {\n                const img = new Image();\n                img.addEventListener(\"load\", () => {\n                    image.element = img;\n                    resolve(image);\n                });\n                img.addEventListener(\"error\", () => {\n                    reject(`Error tsParticles - loading image: ${source}`);\n                });\n                img.src = source;\n            }\n            else {\n                reject(\"Error tsParticles - No image.src\");\n            }\n        });\n    }\n    static downloadSvgImage(source) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (source) {\n                const image = {\n                    source: source,\n                    type: source.substr(source.length - 3),\n                };\n                if (image.type !== \"svg\") {\n                    return this.loadImage(source);\n                }\n                const response = yield fetch(image.source);\n                if (response.ok) {\n                    image.svgData = yield response.text();\n                    return image;\n                }\n                else {\n                    throw new Error(\"Error tsParticles - Image not found\");\n                }\n            }\n            else {\n                throw new Error(\"Error tsParticles - No image.src\");\n            }\n        });\n    }\n    static deepExtend(destination, ...sources) {\n        for (const source of sources) {\n            if (source === undefined || source === null) {\n                continue;\n            }\n            if (typeof source !== \"object\") {\n                destination = source;\n                continue;\n            }\n            const sourceIsArray = Array.isArray(source);\n            if (sourceIsArray && (typeof destination !== \"object\" || !destination || !Array.isArray(destination))) {\n                destination = [];\n            }\n            else if (!sourceIsArray &&\n                (typeof destination !== \"object\" || !destination || Array.isArray(destination))) {\n                destination = {};\n            }\n            for (const key in source) {\n                if (key === \"__proto__\") {\n                    continue;\n                }\n                const value = source[key];\n                const isObject = typeof value === \"object\";\n                destination[key] =\n                    isObject && Array.isArray(value)\n                        ? value.map((v) => this.deepExtend(destination[key], v))\n                        : this.deepExtend(destination[key], value);\n            }\n        }\n        return destination;\n    }\n    static isDivModeEnabled(mode, divs) {\n        return divs instanceof Array\n            ? divs.filter((t) => t.enable && Utils.isInArray(mode, t.mode)).length > 0\n            : Utils.isInArray(mode, divs.mode);\n    }\n    static divModeExecute(mode, divs, callback) {\n        if (divs instanceof Array) {\n            for (const div of divs) {\n                const divMode = div.mode;\n                const divEnabled = div.enable;\n                if (divEnabled && Utils.isInArray(mode, divMode)) {\n                    this.singleDivModeExecute(div, callback);\n                }\n            }\n        }\n        else {\n            const divMode = divs.mode;\n            const divEnabled = divs.enable;\n            if (divEnabled && Utils.isInArray(mode, divMode)) {\n                this.singleDivModeExecute(divs, callback);\n            }\n        }\n    }\n    static singleDivModeExecute(div, callback) {\n        const ids = div.ids;\n        if (ids instanceof Array) {\n            for (const id of ids) {\n                callback(id, div);\n            }\n        }\n        else {\n            callback(ids, div);\n        }\n    }\n    static divMode(divs, divId) {\n        if (!divId) {\n            return;\n        }\n        if (!divs) {\n            return;\n        }\n        if (divs instanceof Array) {\n            return divs.find((d) => Utils.isInArray(divId, d.ids));\n        }\n        else if (Utils.isInArray(divId, divs.ids)) {\n            return divs;\n        }\n    }\n}\nexports.Utils = Utils;\n"},"lineCount":258}},"error":null,"hash":"4e6bd38a542fd61a6cab060dfb59ff08","cacheData":{"env":{}}}