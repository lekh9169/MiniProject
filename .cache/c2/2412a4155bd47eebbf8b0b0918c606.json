{"id":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Collider.js","dependencies":[{"name":"E:\\Ment-master\\package.json","includedInParent":true,"mtime":1593073115667},{"name":"E:\\Ment-master\\.babelrc","includedInParent":true,"mtime":1592712076000},{"name":"E:\\Ment-master\\node_modules\\tsparticles\\package.json","includedInParent":true,"mtime":1593073113793},{"name":"../../../../Utils","loc":{"line":4,"column":24},"parent":"E:\\Ment-master\\node_modules\\tsparticles\\dist\\Core\\Particle\\Interactions\\Particles\\Collider.js","resolved":"E:\\Ment-master\\node_modules\\tsparticles\\dist\\Utils\\index.js"},{"name":"../../../../Enums","loc":{"line":5,"column":24},"parent":"E:\\Ment-master\\node_modules\\tsparticles\\dist\\Core\\Particle\\Interactions\\Particles\\Collider.js","resolved":"E:\\Ment-master\\node_modules\\tsparticles\\dist\\Enums\\index.js"}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Collider = void 0;\nconst Utils_1 = require(\"../../../../Utils\");\nconst Enums_1 = require(\"../../../../Enums\");\nclass Collider {\n    constructor(container) {\n        this.container = container;\n    }\n    static rotate(velocity, angle) {\n        return {\n            horizontal: velocity.horizontal * Math.cos(angle) - velocity.vertical * Math.sin(angle),\n            vertical: velocity.horizontal * Math.sin(angle) + velocity.vertical * Math.cos(angle),\n        };\n    }\n    static collisionVelocity(v1, v2, m1, m2) {\n        return {\n            horizontal: (v1.horizontal * (m1 - m2)) / (m1 + m2) + (v2.horizontal * 2 * m2) / (m1 + m2),\n            vertical: v1.vertical,\n        };\n    }\n    static bounce(p1, p2) {\n        const pos1 = p1.getPosition();\n        const pos2 = p2.getPosition();\n        const xVelocityDiff = p1.velocity.horizontal - p2.velocity.horizontal;\n        const yVelocityDiff = p1.velocity.vertical - p2.velocity.vertical;\n        const xDist = pos2.x - pos1.x;\n        const yDist = pos2.y - pos1.y;\n        if (xVelocityDiff * xDist + yVelocityDiff * yDist >= 0) {\n            const angle = -Math.atan2(pos2.y - pos1.y, pos2.x - pos1.x);\n            const m1 = p1.size.value;\n            const m2 = p2.size.value;\n            const u1 = Collider.rotate(p1.velocity, angle);\n            const u2 = Collider.rotate(p2.velocity, angle);\n            const v1 = Collider.collisionVelocity(u1, u2, m1, m2);\n            const v2 = Collider.collisionVelocity(u2, u1, m1, m2);\n            const vFinal1 = Collider.rotate(v1, -angle);\n            const vFinal2 = Collider.rotate(v2, -angle);\n            p1.velocity.horizontal = vFinal1.horizontal;\n            p1.velocity.vertical = vFinal1.vertical;\n            p2.velocity.horizontal = vFinal2.horizontal;\n            p2.velocity.vertical = vFinal2.vertical;\n        }\n    }\n    static destroy(p1, p2) {\n        if (p1.size.value === undefined && p2.size.value !== undefined) {\n            p1.destroy();\n        }\n        else if (p1.size.value !== undefined && p2.size.value === undefined) {\n            p2.destroy();\n        }\n        else if (p1.size.value !== undefined && p2.size.value !== undefined) {\n            if (p1.size.value >= p2.size.value) {\n                p2.destroy();\n            }\n            else {\n                p1.destroy();\n            }\n        }\n    }\n    static getRadius(particle, fallback) {\n        return particle.bubble.radius || particle.size.value || fallback;\n    }\n    isEnabled(particle) {\n        return particle.particlesOptions.collisions.enable;\n    }\n    reset() {\n    }\n    interact(p1) {\n        const container = this.container;\n        const pos1 = p1.getPosition();\n        const query = container.particles.quadTree.query(new Utils_1.Circle(pos1.x, pos1.y, p1.size.value * 2));\n        for (const p2 of query) {\n            if (p1 === p2 ||\n                !p2.particlesOptions.collisions.enable ||\n                p1.particlesOptions.collisions.mode !== p2.particlesOptions.collisions.mode) {\n                continue;\n            }\n            const pos2 = p2.getPosition();\n            const dist = Utils_1.Utils.getDistance(pos1, pos2);\n            const defaultSize = container.retina.sizeValue;\n            const radius1 = Collider.getRadius(p1, defaultSize);\n            const radius2 = Collider.getRadius(p2, defaultSize);\n            const distP = radius1 + radius2;\n            if (dist <= distP) {\n                this.resolveCollision(p1, p2);\n            }\n        }\n    }\n    resolveCollision(p1, p2) {\n        switch (p1.particlesOptions.collisions.mode) {\n            case Enums_1.CollisionMode.absorb: {\n                this.absorb(p1, p2);\n                break;\n            }\n            case Enums_1.CollisionMode.bounce: {\n                Collider.bounce(p1, p2);\n                break;\n            }\n            case Enums_1.CollisionMode.destroy: {\n                Collider.destroy(p1, p2);\n                break;\n            }\n        }\n    }\n    absorb(p1, p2) {\n        const container = this.container;\n        const fps = container.options.fpsLimit / 1000;\n        if (p1.size.value === undefined && p2.size.value !== undefined) {\n            p1.destroy();\n        }\n        else if (p1.size.value !== undefined && p2.size.value === undefined) {\n            p2.destroy();\n        }\n        else if (p1.size.value !== undefined && p2.size.value !== undefined) {\n            if (p1.size.value >= p2.size.value) {\n                const factor = Utils_1.Utils.clamp(p1.size.value / p2.size.value, 0, p2.size.value) * fps;\n                p1.size.value += factor;\n                p2.size.value -= factor;\n                if (p2.size.value <= container.retina.pixelRatio) {\n                    p2.size.value = 0;\n                    p2.destroy();\n                }\n            }\n            else {\n                const factor = Utils_1.Utils.clamp(p2.size.value / p1.size.value, 0, p1.size.value) * fps;\n                p1.size.value -= factor;\n                p2.size.value += factor;\n                if (p1.size.value <= container.retina.pixelRatio) {\n                    p1.size.value = 0;\n                    p1.destroy();\n                }\n            }\n        }\n    }\n}\nexports.Collider = Collider;\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Collider.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Collider.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Collider.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Collider.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Collider.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Collider.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Collider.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Collider.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Collider.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Collider.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Collider.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Collider.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Collider.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Collider.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Collider.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Collider.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Collider.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Collider.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Collider.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Collider.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Collider.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Collider.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Collider.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Collider.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Collider.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Collider.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Collider.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Collider.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Collider.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Collider.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Collider.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Collider.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Collider.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Collider.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Collider.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Collider.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Collider.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Collider.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Collider.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Collider.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Collider.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Collider.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Collider.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Collider.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Collider.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Collider.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Collider.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Collider.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Collider.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Collider.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Collider.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Collider.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Collider.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Collider.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Collider.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Collider.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Collider.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Collider.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Collider.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Collider.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Collider.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Collider.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Collider.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Collider.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Collider.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Collider.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Collider.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Collider.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Collider.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Collider.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Collider.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Collider.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Collider.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Collider.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Collider.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Collider.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Collider.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Collider.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Collider.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Collider.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Collider.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Collider.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Collider.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Collider.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Collider.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Collider.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Collider.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Collider.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Collider.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Collider.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Collider.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Collider.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Collider.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Collider.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Collider.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Collider.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Collider.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Collider.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Collider.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Collider.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Collider.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Collider.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Collider.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Collider.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Collider.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Collider.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Collider.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Collider.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Collider.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Collider.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Collider.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Collider.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Collider.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Collider.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Collider.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Collider.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Collider.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Collider.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Collider.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Collider.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Collider.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Collider.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Collider.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Collider.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Collider.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Collider.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Collider.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Collider.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Collider.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Collider.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Collider.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Collider.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Collider.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Collider.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Collider.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Collider.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Collider.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Collider.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}}],"sources":{"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Collider.js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Collider = void 0;\nconst Utils_1 = require(\"../../../../Utils\");\nconst Enums_1 = require(\"../../../../Enums\");\nclass Collider {\n    constructor(container) {\n        this.container = container;\n    }\n    static rotate(velocity, angle) {\n        return {\n            horizontal: velocity.horizontal * Math.cos(angle) - velocity.vertical * Math.sin(angle),\n            vertical: velocity.horizontal * Math.sin(angle) + velocity.vertical * Math.cos(angle),\n        };\n    }\n    static collisionVelocity(v1, v2, m1, m2) {\n        return {\n            horizontal: (v1.horizontal * (m1 - m2)) / (m1 + m2) + (v2.horizontal * 2 * m2) / (m1 + m2),\n            vertical: v1.vertical,\n        };\n    }\n    static bounce(p1, p2) {\n        const pos1 = p1.getPosition();\n        const pos2 = p2.getPosition();\n        const xVelocityDiff = p1.velocity.horizontal - p2.velocity.horizontal;\n        const yVelocityDiff = p1.velocity.vertical - p2.velocity.vertical;\n        const xDist = pos2.x - pos1.x;\n        const yDist = pos2.y - pos1.y;\n        if (xVelocityDiff * xDist + yVelocityDiff * yDist >= 0) {\n            const angle = -Math.atan2(pos2.y - pos1.y, pos2.x - pos1.x);\n            const m1 = p1.size.value;\n            const m2 = p2.size.value;\n            const u1 = Collider.rotate(p1.velocity, angle);\n            const u2 = Collider.rotate(p2.velocity, angle);\n            const v1 = Collider.collisionVelocity(u1, u2, m1, m2);\n            const v2 = Collider.collisionVelocity(u2, u1, m1, m2);\n            const vFinal1 = Collider.rotate(v1, -angle);\n            const vFinal2 = Collider.rotate(v2, -angle);\n            p1.velocity.horizontal = vFinal1.horizontal;\n            p1.velocity.vertical = vFinal1.vertical;\n            p2.velocity.horizontal = vFinal2.horizontal;\n            p2.velocity.vertical = vFinal2.vertical;\n        }\n    }\n    static destroy(p1, p2) {\n        if (p1.size.value === undefined && p2.size.value !== undefined) {\n            p1.destroy();\n        }\n        else if (p1.size.value !== undefined && p2.size.value === undefined) {\n            p2.destroy();\n        }\n        else if (p1.size.value !== undefined && p2.size.value !== undefined) {\n            if (p1.size.value >= p2.size.value) {\n                p2.destroy();\n            }\n            else {\n                p1.destroy();\n            }\n        }\n    }\n    static getRadius(particle, fallback) {\n        return particle.bubble.radius || particle.size.value || fallback;\n    }\n    isEnabled(particle) {\n        return particle.particlesOptions.collisions.enable;\n    }\n    reset() {\n    }\n    interact(p1) {\n        const container = this.container;\n        const pos1 = p1.getPosition();\n        const query = container.particles.quadTree.query(new Utils_1.Circle(pos1.x, pos1.y, p1.size.value * 2));\n        for (const p2 of query) {\n            if (p1 === p2 ||\n                !p2.particlesOptions.collisions.enable ||\n                p1.particlesOptions.collisions.mode !== p2.particlesOptions.collisions.mode) {\n                continue;\n            }\n            const pos2 = p2.getPosition();\n            const dist = Utils_1.Utils.getDistance(pos1, pos2);\n            const defaultSize = container.retina.sizeValue;\n            const radius1 = Collider.getRadius(p1, defaultSize);\n            const radius2 = Collider.getRadius(p2, defaultSize);\n            const distP = radius1 + radius2;\n            if (dist <= distP) {\n                this.resolveCollision(p1, p2);\n            }\n        }\n    }\n    resolveCollision(p1, p2) {\n        switch (p1.particlesOptions.collisions.mode) {\n            case Enums_1.CollisionMode.absorb: {\n                this.absorb(p1, p2);\n                break;\n            }\n            case Enums_1.CollisionMode.bounce: {\n                Collider.bounce(p1, p2);\n                break;\n            }\n            case Enums_1.CollisionMode.destroy: {\n                Collider.destroy(p1, p2);\n                break;\n            }\n        }\n    }\n    absorb(p1, p2) {\n        const container = this.container;\n        const fps = container.options.fpsLimit / 1000;\n        if (p1.size.value === undefined && p2.size.value !== undefined) {\n            p1.destroy();\n        }\n        else if (p1.size.value !== undefined && p2.size.value === undefined) {\n            p2.destroy();\n        }\n        else if (p1.size.value !== undefined && p2.size.value !== undefined) {\n            if (p1.size.value >= p2.size.value) {\n                const factor = Utils_1.Utils.clamp(p1.size.value / p2.size.value, 0, p2.size.value) * fps;\n                p1.size.value += factor;\n                p2.size.value -= factor;\n                if (p2.size.value <= container.retina.pixelRatio) {\n                    p2.size.value = 0;\n                    p2.destroy();\n                }\n            }\n            else {\n                const factor = Utils_1.Utils.clamp(p2.size.value / p1.size.value, 0, p1.size.value) * fps;\n                p1.size.value -= factor;\n                p2.size.value += factor;\n                if (p1.size.value <= container.retina.pixelRatio) {\n                    p1.size.value = 0;\n                    p1.destroy();\n                }\n            }\n        }\n    }\n}\nexports.Collider = Collider;\n"},"lineCount":138}},"error":null,"hash":"344a3d56f323dca7d97300732545961c","cacheData":{"env":{}}}